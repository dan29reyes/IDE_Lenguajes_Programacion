import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "filesystemmodel.h"
        name: "FileSystemModel"
        accessSemantics: "reference"
        prototype: "QFileSystemModel"
        exports: ["FileSystemModule/FileSystemModel 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256]
        Property {
            name: "rootIndex"
            type: "QModelIndex"
            read: "rootIndex"
            write: "setRootIndex"
            notify: "rootIndexChanged"
            index: 0
        }
        Signal { name: "rootIndexChanged" }
        Method {
            name: "readFile"
            type: "QString"
            Parameter { name: "filePath"; type: "QString" }
        }
        Method {
            name: "currentLineNumber"
            type: "int"
            Parameter { name: "textDocument"; type: "QQuickTextDocument"; isPointer: true }
            Parameter { name: "cursorPosition"; type: "int" }
        }
    }
    Component {
        file: "linenumbermodel.h"
        name: "LineNumberModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["FileSystemModule/LineNumberModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "lineCount"
            type: "int"
            read: "lineCount"
            write: "setLineCount"
            notify: "lineCountChanged"
            index: 0
        }
        Signal { name: "lineCountChanged" }
    }
    Component {
        file: "qfilesystemmodel.h"
        name: "QFileSystemModel"
        accessSemantics: "reference"
        prototype: "QAbstractItemModel"
        Enum {
            name: "Option"
            values: [
                "DontWatchForChanges",
                "DontResolveSymlinks",
                "DontUseCustomDirectoryIcons"
            ]
        }
        Property {
            name: "resolveSymlinks"
            type: "bool"
            read: "resolveSymlinks"
            write: "setResolveSymlinks"
            index: 0
        }
        Property { name: "readOnly"; type: "bool"; read: "isReadOnly"; write: "setReadOnly"; index: 1 }
        Property {
            name: "nameFilterDisables"
            type: "bool"
            read: "nameFilterDisables"
            write: "setNameFilterDisables"
            index: 2
        }
        Property { name: "options"; type: "Options"; read: "options"; write: "setOptions"; index: 3 }
        Signal {
            name: "rootPathChanged"
            Parameter { name: "newPath"; type: "QString" }
        }
        Signal {
            name: "fileRenamed"
            Parameter { name: "path"; type: "QString" }
            Parameter { name: "oldName"; type: "QString" }
            Parameter { name: "newName"; type: "QString" }
        }
        Signal {
            name: "directoryLoaded"
            Parameter { name: "path"; type: "QString" }
        }
    }
}
